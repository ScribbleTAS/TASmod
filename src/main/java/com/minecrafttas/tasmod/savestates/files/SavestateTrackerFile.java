package com.minecrafttas.tasmod.savestates.files;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;

import com.minecrafttas.mctcommon.file.AbstractDataFile;
import com.minecrafttas.tasmod.TASmod;

/**
 * Used to keep track of savestates and rerecordings
 * @author Scribble
 *
 */
public class SavestateTrackerFile extends AbstractDataFile {
	
	
	// This shouldn't matter... static is fine!

	public SavestateTrackerFile(Path saveLocation) throws IOException {
		super(saveLocation, "savestate tracker", "This file was generated by TASmod/LoTAS and diplays info about the usage of savestates");

		if (!Files.exists(saveLocation)) {
			setSavestateCount(0);
			setLoadstateCount(0);
			save();
		} else {
			load();
		}
	}

	public int getSavestateCount() {
		load();
		return loadCount("Total Savestates");
	}

	private void setSavestateCount(int savestatecount) {
		setCount("Total Savestates", savestatecount);
	}

	public void increaseSaveStateCount() {
		setSavestateCount(getSavestateCount() + 1);
		save();
	}

	public int getLoadstateCount() {
		load();
		return loadCount("Total Loadstates");
	}

	public void setLoadstateCount(int loadstatecount) {
		setCount("Total Loadstates", loadstatecount);
		save();
	}

	public void increaseLoadstateCount() {
		setLoadstateCount(getLoadstateCount() + 1);
	}

	private int loadCount(String key) {
		String value = properties.getProperty(key, "0");
		int count = 0;
		try {
			count = Integer.parseInt(value);
		} catch (NumberFormatException e) {
			TASmod.LOGGER.error("The {} could not be read in {}. The value {} is not a number", key, name, e.getMessage());
		}
		return count;
	}

	private void setCount(String key, int count) {
		properties.setProperty(key, Integer.toString(count));
	}
}
